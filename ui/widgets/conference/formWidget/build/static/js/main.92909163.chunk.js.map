{"version":3,"sources":["components/ConferenceForm.js","components/__types__/conference.js","components/common/Notification.js","api/constants.js","api/conferences.js","components/ConferenceEditFormContainer.js","components/ConferenceAddFormContainer.js","i18n/locales/index.js","i18n/i18next.js","i18n/setLocale.js","i18n/constants.js","i18n/yup.js","custom-elements/ConferenceFormElement.js"],"names":["ConferenceForm","PropTypes","shape","id","number","name","string","location","bool","oneOfType","props","classes","values","touched","errors","handleChange","handleBlur","handleSubmit","getHelperText","setFieldValue","field","onSubmit","className","root","Grid","container","spacing","item","xs","sm","TextField","error","helperText","textField","onBlur","value","onChange","label","i18next","t","Button","type","color","data-testid","defaultProps","emptyConference","formikBag","mapPropsToValues","conference","enableReinitialize","validationSchema","yup","displayName","compose","withStyles","theme","margin","width","withTheme","withFormik","statusIcon","success","CheckCircleIcon","ErrorIcon","info","InfoIcon","Notification","status","message","onClose","Icon","messageTemplate","clsx","icon","iconStatus","Snackbar","open","SnackbarContent","action","IconButton","key","aria-label","onClick","display","alignItems","fontSize","opacity","marginRight","backgroundColor","green","palette","dark","primary","main","DOMAIN","process","defaultOptions","headers","Headers","Authorization","request","url","options","a","fetch","response","json","Promise","reject","Error","statusText","apiConferenceGet","method","apiConferencePost","body","JSON","stringify","apiConferencePut","ConferenceEditFormContainer","createMuiTheme","state","notificationMessage","closeNotification","bind","this","setState","handleError","notificationStatus","updatedConference","onUpdate","err","onError","ThemeProvider","PureComponent","ConferenceAddFormContainer","createdConference","onCreate","en","resources","Object","keys","locales","reduce","acc","lang","translateFn","locale","defaultLocale","use","initReactI18next","init","defaultNs","interpolation","escapeValue","lng","fallbackLng","setI18nextLocale","yupLocale","mixed","required","path","Yup","setYupLocale","ConferenceFormElement","mountPoint","document","createElement","appendChild","getAttribute","setLocale","prefix","eventDispatcher","eventId","detailPropName","payload","customEvent","CustomEvent","detail","dispatchEvent","onCreateError","onUpdateError","reactRoot","React","ReactDOM","render","HTMLElement","customElements","define"],"mappings":"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","file":"static/js/main.92909163.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport { withStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { compose } from 'recompose'; // TODO: REMOVE compose/recompose\n\nimport { formValues, formTouched, formErrors } from 'components/__types__/conference';\n\nconst styles = theme => ({\n  root: {\n    margin: theme.spacing(3),\n  },\n  textField: {\n    width: '100%',\n  },\n});\n\nconst ConferenceForm = props => {\n  const {\n    classes,\n    values,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    setFieldValue,\n  } = props;\n\n  const getHelperText = field => (errors[field] && touched[field] ? errors[field] : '');\n\n  return (\n      <form onSubmit={handleSubmit} className={classes.root}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"conference-name\"\n              error={errors.name && touched.name}\n              helperText={getHelperText('name')}\n              className={classes.textField}\n              onBlur={handleBlur}\n              value={values.name}\n              name=\"name\"\n              onChange={handleChange}\n              label={i18next.t('entities.conference.name')}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"conference-location\"\n              error={errors.name && touched.name}\n              helperText={getHelperText('location')}\n              className={classes.textField}\n              onBlur={handleBlur}\n              value={values.location}\n              name=\"location\"\n              onChange={handleChange}\n              label={i18next.t('entities.conference.location')}\n            />\n          </Grid>\n          <Button type=\"submit\" color=\"primary\" data-testid=\"submit-btn\">\n            {i18next.t('common.save')}\n          </Button>\n        </Grid>\n      </form>\n  );\n};\n\nConferenceForm.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string,\n    textField: PropTypes.string,\n    submitButton: PropTypes.string,\n  }),\n  values: formValues,\n  touched: formTouched,\n  errors: formErrors,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  setFieldValue: PropTypes.func.isRequired,\n};\n\nConferenceForm.defaultProps = {\n  classes: {},\n  values: {},\n  touched: {},\n  errors: {},\n};\n\nconst emptyConference = {\n  name: '',\n  location: '',\n};\n\nconst validationSchema = yup.object().shape({\n  name: yup.string(),\n  location: yup.string(),\n});\n\nconst formikBag = {\n  mapPropsToValues: ({ conference }) => conference || emptyConference,\n\n  enableReinitialize: true,\n\n  validationSchema,\n\n  handleSubmit: (values, { props: { onSubmit } }) => {\n    onSubmit(values);\n  },\n\n  displayName: 'ConferenceForm',\n};\n\nexport default compose(\n  withStyles(styles, { withTheme: true }),\n  withFormik(formikBag)\n)(ConferenceForm);\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  id: PropTypes.number,\n\n  name: PropTypes.string,\n  location: PropTypes.string,\n});\n\nexport const formValues = PropTypes.shape({\n  name: PropTypes.string,\n  location: PropTypes.string,\n});\n\nexport const formTouched = PropTypes.shape({\n  name: PropTypes.bool,\n  location: PropTypes.bool,\n});\n\nexport const formErrors = PropTypes.shape({\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.shape()]),\n  location: PropTypes.oneOfType([PropTypes.string, PropTypes.shape()]),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { green } from '@material-ui/core/colors';\n\nconst styles = theme => ({\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconStatus: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n});\n\nconst statusIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst Notification = ({ className, classes, status, message, onClose }) => {\n  if (!message) return '';\n\n  const Icon = statusIcon[status];\n  const messageTemplate = (\n    <span className={classes.message}>\n      <Icon className={clsx(classes.icon, classes.iconStatus)} />\n      {message}\n    </span>\n  );\n\n  return (\n    <Snackbar open onClose={onClose}>\n      <SnackbarContent\n        className={clsx(classes[status], className)}\n        message={messageTemplate}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n};\n\nNotification.propTypes = {\n  classes: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    iconStatus: PropTypes.string.isRequired,\n    error: PropTypes.string.isRequired,\n  }).isRequired,\n  className: PropTypes.string,\n  status: PropTypes.oneOf(['success', 'error', 'info']),\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nNotification.defaultProps = {\n  message: null,\n  className: '',\n  status: 'info',\n  onClose: () => {},\n};\n\nexport default withStyles(styles, { withTheme: true })(Notification);\n","export const DOMAIN = process.env.REACT_APP_DOMAIN;\nexport const JWT_TOKEN = process.env.REACT_APP_JWT_TOKEN;\n","import { DOMAIN, JWT_TOKEN } from 'api/constants';\n\nconst resource = 'conferences';\n\nconst defaultOptions = {\n  headers: new Headers({\n    Authorization: `Bearer ${JWT_TOKEN}`,\n    'Content-Type': 'application/json',\n  }),\n};\n\nconst request = async (url, options) => {\n  const response = await fetch(url, options);\n\n  return response.status >= 200 && response.status < 300\n    ? response.json()\n    : Promise.reject(new Error(response.statusText || response.status));\n};\n\nexport const apiConferenceGet = async id => {\n  const url = `${DOMAIN}/${resource}/${id}`;\n  const options = {\n    ...defaultOptions,\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiConferencePost = async conference => {\n  const url = `${DOMAIN}/${resource}`;\n  const options = {\n    ...defaultOptions,\n    method: 'POST',\n    body: conference ? JSON.stringify(conference) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiConferencePut = async conference => {\n  const url = `${DOMAIN}/${resource}`;\n  const options = {\n    ...defaultOptions,\n    method: 'PUT',\n    body: conference ? JSON.stringify(conference) : null,\n  };\n  return request(url, options);\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core';\nimport ConferenceForm from 'components/ConferenceForm';\nimport Notification from 'components/common/Notification';\nimport { apiConferenceGet, apiConferencePut } from 'api/conferences';\n\nclass ConferenceEditFormContainer extends PureComponent {\n  theme = createMuiTheme();\n\n  state = {\n    conference: null,\n    notificationMessage: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.closeNotification = this.closeNotification.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    const { id } = this.props;\n    if (!id) return;\n    try {\n      const conference = await apiConferenceGet(id);\n      this.setState({\n        conference,\n      });\n    } catch (err) {\n      this.handleError(err);\n    }\n  }\n\n  closeNotification() {\n    this.setState({ notificationMessage: null, notificationStatus: null });\n  }\n\n  async handleSubmit(conference) {\n    try {\n      const updatedConference = await apiConferencePut(conference);\n      const { onUpdate } = this.props;\n      onUpdate(updatedConference);\n\n      this.setState({\n        conference: updatedConference,\n        notificationMessage: i18next.t('common.dataSaved'),\n        notificationStatus: 'success',\n      });\n    } catch (err) {\n      this.handleError(err);\n    }\n  }\n\n  handleError(err) {\n    const { onError } = this.props;\n    onError(err);\n    this.setState({\n      notificationMessage: i18next.t('errors.dataLoading'),\n      notificationStatus: 'error',\n    });\n  }\n\n  render() {\n    const { notificationMessage, notificationStatus, conference } = this.state;\n    return (\n      <ThemeProvider theme={this.theme}>\n        <ConferenceForm\n          conference={conference}\n          onSubmit={this.handleSubmit}\n        />\n        <Notification\n          status={notificationStatus}\n          message={notificationMessage}\n          onClose={this.closeNotification}\n        />\n      </ThemeProvider>\n    );\n  }\n}\n\nConferenceEditFormContainer.propTypes = {\n  id: PropTypes.string.isRequired,\n  onError: PropTypes.func,\n  onUpdate: PropTypes.func,\n};\n\nConferenceEditFormContainer.defaultProps = {\n  onError: () => {},\n  onUpdate: () => {},\n};\n\nexport default ConferenceEditFormContainer;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core';\nimport i18next from 'i18next';\nimport { apiConferencePost } from 'api/conferences';\nimport ConferenceForm from 'components/ConferenceForm';\nimport Notification from 'components/common/Notification';\n\nclass ConferenceAddFormContainer extends PureComponent {\n  theme = createMuiTheme();\n\n  state = {\n    notificationMessage: null,\n  };\n\n  constructor(props) {\n    super(props);\n    this.closeNotification = this.closeNotification.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  closeNotification() {\n    this.setState({ notificationMessage: null, notificationStatus: null });\n  }\n\n  async handleSubmit(conference) {\n    try {\n      const createdConference = await apiConferencePost(conference);\n      const { onCreate } = this.props;\n      onCreate(createdConference);\n\n      this.setState({\n        notificationMessage: i18next.t('common.dataSaved'),\n        notificationStatus: 'success',\n      });\n    } catch (err) {\n      this.handleError(err);\n    }\n  }\n\n  handleError(err) {\n    const { onError } = this.props;\n    onError(err);\n    this.setState({\n      notificationMessage: i18next.t('errors.dataLoading'),\n      notificationStatus: 'error',\n    });\n  }\n\n  render() {\n    const { notificationMessage, notificationStatus } = this.state;\n    return (\n      <ThemeProvider theme={this.theme}>\n        <ConferenceForm onSubmit={this.handleSubmit} />\n        <Notification\n          status={notificationStatus}\n          message={notificationMessage}\n          onClose={this.closeNotification}\n        />\n      </ThemeProvider>\n    );\n  }\n}\n\nConferenceAddFormContainer.propTypes = {\n  onError: PropTypes.func,\n  onCreate: PropTypes.func,\n};\n\nConferenceAddFormContainer.defaultProps = {\n  onError: () => {},\n  onCreate: () => {},\n};\n\nexport default ConferenceAddFormContainer;\n","import en from 'i18n/locales/en.json';\n\nexport default {\n  en,\n};\n","import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport locales from 'i18n/locales';\n\nconst defaultNs = 'translation';\n\n// adds the default namespace to the locales\nconst resources = Object.keys(locales).reduce(\n  (acc, lang) => ({ ...acc, [lang]: { [defaultNs]: locales[lang] } }),\n  {}\n);\n\nexport const translateFn = i18next.t;\n\nexport const setI18nextLocale = (locale, defaultLocale) => {\n  i18next.use(initReactI18next).init({\n    defaultNs,\n    interpolation: {\n      escapeValue: false,\n    },\n    resources,\n    lng: locale,\n    fallbackLng: defaultLocale,\n  });\n};\n","import { DEFAULT_LOCALE } from 'i18n/constants';\nimport { setYupLocale } from 'i18n/yup';\nimport { translateFn, setI18nextLocale } from 'i18n/i18next';\n\nexport default locale => {\n  setI18nextLocale(locale, DEFAULT_LOCALE);\n  setYupLocale(translateFn);\n};\n","export const DEFAULT_LOCALE = 'en'; // eslint-disable-line import/prefer-default-export\n","import * as Yup from 'yup';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const setYupLocale = translateFn => {\n  const yupLocale = {\n    mixed: {\n      required: ({ path }) =>\n        translateFn('validation.required', { field: translateFn(`entities.<%= entityInstance %>.${path}`) }),\n    },\n  };\n  Yup.setLocale(yupLocale);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ConferenceEditFormContainer from 'components/ConferenceEditFormContainer';\nimport ConferenceAddFormContainer from 'components/ConferenceAddFormContainer';\nimport setLocale from 'i18n/setLocale';\n\nclass ConferenceFormElement extends HTMLElement {\n  connectedCallback() {\n    const mountPoint = document.createElement('div');\n    this.appendChild(mountPoint);\n\n    const id = this.getAttribute('id');\n    const locale = this.getAttribute('locale');\n\n    setLocale(locale);\n\n    const prefix = 'conference.form.';\n\n    const eventDispatcher = (eventId, detailPropName) => payload => {\n      const customEvent = new CustomEvent(eventId, {\n        detail: {\n          [detailPropName]: payload,\n        },\n      });\n      this.dispatchEvent(customEvent);\n    };\n\n    const onCreateError = eventDispatcher(`${prefix}createError`, 'error');\n    const onUpdateError = eventDispatcher(`${prefix}updateError`, 'error');\n    const onCreate = eventDispatcher(`${prefix}create`, 'item');\n    const onUpdate = eventDispatcher(`${prefix}update`, 'item');\n\n    const reactRoot = id\n      ? React.createElement(\n          ConferenceEditFormContainer,\n          { id, onError: onUpdateError, onUpdate },\n          null\n        )\n      : React.createElement(\n          ConferenceAddFormContainer,\n          { onError: onCreateError, onCreate },\n          null\n        );\n    ReactDOM.render(reactRoot, mountPoint);\n  }\n}\n\ncustomElements.define('conference-form', ConferenceFormElement);\n"],"sourceRoot":""}